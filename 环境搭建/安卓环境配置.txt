### 开发手机
对应手机刷对应软件包

### 下载刷机包：FileZilla


### 脚本刷机
* adb *root
* adb reboot remount
* adb remount
* 找到后缀-*.tar.gz文件解压
* 管理员方式运行fastboot_flash_ufs.bat

### AFtools格式化刷机
* 下载AFtools：远程站点：/images/*_file/AFtools
* 安装AFtools，并且由接口人申请权限。网点代码:*
* 启动AFtools，选择fastboot_flash_ufs.bat
* 重启手机，同时按住音量上下键，进入fastboot界面
* 点击AFtools上面的下载按钮。等待刷机完成。。。

### OEM切换
* adb devices 
* adb *root
* adb reboot remount
* db remount
* USB调试模式：*#*#7777#*#* v开启开发者模式
* USB调试端口：*#558# -> 品质验证测试 -> 开发调试 -> 勾选“调试端口”
* 打开AuthorizationTool.exe点击IMEI授权和EM授权
* OEM切换-定制机-选择CMCC_RWA

### 端口配置：ANDROID_ADB_SERVER_PORT  5999

### gradle路径配置
C:\Program Files\Android\gradle-5.4.1-all\bin
file:///C:/Program Files/Android/gradle-5.4.1-all.zip
distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip

### Android studio配置
弹出顶部菜单：View-ToolBar勾选
File Encodings 选择utf-8
plugins：
GsonFormat（json生成实体类）
使用方法：快捷键Alt+S也可以使用Alt+Insert选择GsonFormat
Android Parcelable code generator（实体类序列化）
使用方法：按Alt+Insert，选择Palcelable，选择需要的属性，按下OK
Lifecycle Sorter（方法按生命周期排列）
使用方法：快捷键Ctrl + alt + K
CodeGlance（右边可以预览代码，实现快速定位）
findBugs-IDEA（查找bug的插件，Android Studio也提供了代码审查的功能（Analyze-Inspect Code…））
AndroidSourceViewer (安卓源码查看)
gerrit 代码提交审核工具，需要领导审核之后，才正式进git仓库。
findViewByMe 在布局文件中右键，然后选择findViewByMe

### 代码注释
 /**
 ${PACKAGE_NAME}-
 ${USER}-
 ${DATE}-
 ${TIME}-
 ${YEAR}-
 ${MONTH}-
 ${MONTH_NAME_SHORT}-
 ${MONTH_NAME_FULL}-
 ${DAY}-
 ${DAY_NAME_SHORT}-
 ${DAY_NAME_FULL}-
 ${HOUR}-
 ${MINUTE}-
 ${PROJECT_NAME}-
 */
 /**
 * com.*-
 * -
 * 2019/11/9-
 * 17:59-
 * 2019-
 * 11-
 * 十一月-
 * 十一月-
 * 09-
 * 星期六-
 * 星期六-
 * 17-
 * 59-
 * android_packages_apps_Mms-
 */

 ### 创建文件的时候添加注释
1、File->Settings->Editor->File and Code Templates->Includes->J File Header
/**
 * Author：*
 * Date：${YEAR}.${MONTH}.${DAY} ${TIME}
 * Description：类描述
 */
/**
 * Author：*
 * Date：${DATE} ${TIME}
 * Description：类描述
 */

### 快捷键生成Class注释
2、File->Settings->Editor->Live Templates
添加Templates Group 名称为：DocGroup
添加Live Templates 
Abbreviation为：gaClass
Template text为：
/**
 * Author：*
 * Date：$date$ $time$
 * Description：类描述
 */
Edit variables配置：
date为
groovyScript("return (\"${_1}\".replace('\/', '.'))", date())
time为time()
Change全部勾选
以后就可以输入 gaClass加回车快速生成Class注释

### 快捷键生成Method注释
添加Live Templates 
Abbreviation为：gaMethod
Template text为：
/**
 * Author：*
 * Date：$date$ $time$
 * Description：方法描述
 *
 $params$$return$
 */
Edit variables配置：
date为
groovyScript("return (\"${_1}\".replace('\/', '.'))", date())
time为time()
params的Default value为 
groovyScript("def result=''; def params=\"${_1}\".replace('[', '').replace(']', '').split(',').toList(); for(i = 0; i < params.size(); i++) {result+='* @param ' + params[i].trim() + ((i < params.size() - 1) ? '\\n'+' ' : '')}; return result", methodParameters())
return的Default value为
groovyScript("return (\"${_1}\".toString()=='void'?'':'\\n'+' * @return 返回值描述')", methodReturnType())
Change全部勾选
以后就可以输入 gaMethod加回车快速生成Method注释

### 快捷键生成Log注释
添加Live Templates 
Abbreviation为：gaLog
Template text为：
Log.d(TAG,"*methodName:$methodName$*args:$args$");
Edit variables配置：
methodName为methodName()
args的Default value为 
groovyScript("def result=''; def params=\"${_1}\".replace('[', '').replace(']', '').split(',').toList(); for(i = 0; i < params.size(); i++) {result+=params[i].trim() + '=,'}; return result", methodParameters())
Change全部勾选
以后就可以输入 gaLog加回车快速生成Log注释

### 开启log打印
*#*#112#*#*  并且 adb *root

### 添加推送sdk
1、push 26号的sdk
2、如果已安装sso debug apk，卸载掉
3、安装最新Mms apk
4、手动新建会话，输入号码**，给这个号码发一条文本消息（内容随意）。退出会话，再进去，继续发消息，应该就会收到推送的内容。
核对是否push的是最新的sdk命令
adb shell ls -l system/priv-app/RcsSDK
清理数据
adb uninstall 























