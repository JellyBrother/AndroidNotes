### git常见问题：
https://zhuanlan.zhihu.com/p/159766744
https://www.pianshen.com/article/9895765273/
https://cloud.tencent.com/developer/article/2015651

### ssh配置
$ git config --global user.name "用户名"
$ git config --global user.email "用户邮箱"
进文件夹：C:\Users\Administrator\.ssh
生成密钥和公钥：ssh-keygen -t rsa -C "你的邮箱"
* 不输入账号密码，直接回车就行
* 进入指定路径C:\Users\Administrator\.ssh文件夹中，用记事本打开 id_rsa.pub，全选复制内容。放到网站的ssh里面即可

git操作
git clone 拉取代码
git branch -r查看分支
git checkout -b 分支名字 --切换或者创建分支
git checkout 分支名字 --切换分支
git merge 合并分支
git branch -d 删除分支
git branch -a 查看所有分支
git reset --soft HEAD^  剔除本次提交，并保存本地
最好自己在TFS上面建分支，方便自己以后进行删除。含remotes的是服务器分支，没有的是本地开发分支。
分支合并要先拉developing服务器上面的分支到自己的开发分支，解决完冲突后提交到服务器，再切换到developing分支，拉取服务器上面自己的开发分支合并到developing分支。
git提交格式： #需求id 【修改说明】提交描述【工号】
git拉取代码的时候有冲突时：
1、先git缓存 git stash
2、然后拉代码 git pull
3、wq
4、把缓存的代码弹出 git stash pop
5、解决冲突

cls清理屏幕
cd ..返回上级目录

git地址：http://smartgit/gerrit/#/dashboard/self
gerrit   
到网上下载git安装包并安装；
注意：可以配置alias简化输入：
git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch
git配置账号
git config --global user.name 
git config --global user.email 

3.3 生成ssh key，并配置到gerrit（如果本地已经有ssh文件，就会生成不了）
a 使用ssh-keygen -t rsa -C ""命令生成ssh key（邮箱后缀为@*.com）；
b 复制public key文件内容，public key路径如下：C:\Users\你的用户名\.ssh\id_rsa.pub；
c 将复制的public key粘贴到gerrit网站，路径Settings → SSH Public Keys → Add key；

### amend方式
比如这一笔代码，给了comment让你修改
http://smartgit/gerrit/#/c//
然后你在本地修改代码，修完之后用命令
git add
git commit --amend
git push HEAD:refs/changes/*

### 如果对于有些git命令不熟悉，建议多建几个工程来处理代码，同一个工程下，连续提交commit是特别容易有冲突的。
一般用pull, cherry-pick，rebase时，遇到冲突，用git status就可以看到哪个文件有冲突。此时命令行界面都会提示你接下来怎么操作，来完成冲突的解决。

### 如果一个工程里面有多个commit，然后遇到冲突的情况。
我们可以通过commit id找到某一笔提交，并且有多种方式切到这个提交。
1. get reset [commit id]  // 这里可以带参数--hard或者--soft等
2. git cherry-pick [commit id]
3. 或者直接从gerrit找到对应代码，然后拉到本地，如截图

### 最常用的几个命令可以熟悉下
git add
git commit -m
git commit --amend
git push origin HEAD:refs/for/
git push origin HEAD:refs/changes/
git pull
git remote update
git rebase
git cherry-pick
git log
git status
git show
git reflog
git diff

### 代码冲突解决
* 产生原因：我提交代码到gerrit去审核，审核人觉得有问题，提出修改建议。我按照修改建议修改完成后，拉取代码，发现有人提交代码，并且跟我有冲突。
* git add  添加我需要提交的内容
* git commit -–amend –no-edit  对上一次的提交进行修改，并且添加提交说明
* git push origin HEAD:refs/changes/**  提交代码到**审核分支
* 以上三个是没有冲突的情况下进行操作。当然此时，不拉取代码，就不会产生冲突。
* :q!  让前面的命令执行完毕，正常退出。不能直接关闭，不然上一个命令不能执行完毕。
* git merge --abort  将会抛弃合并过程并且尝试重建合并前的状态（危险操作）
* :q!  让前面的命令执行完毕，正常退出。不能直接关闭，不然上一个命令不能执行完毕。
* git show  显示各种类型的对象
* git remote update  管理一组跟踪的存储库。
* git rebase  在另一个分支基础之上重新应用，用于把一个分支的修改合并到当前分支。
* 这个时候会报红，显示冲突的文件。自己解决完冲突后继续，有可能自己改动的代码也回滚不见了，需要注意代码备份。
* git rebase --continue  
* git push origin HEAD:refs/changes/**
* 新的提交用for：git push origin HEAD:refs/for/**
* 在原有基础上进行修改用changes：git push origin HEAD:refs/changes/**
* 代码提交到gerrit后，修改了内容，拉取最新代码，不会有冲突的流程：
* git status 查看状态 git add 添加修改 git commit -–amend 在原有修改上再次修改 
需要修改的时候，按insert键和上下左右键进行重新编辑。编辑完成后，按esc退出，输入:wq回车，
git pull 拉取最新代码，
git rebase 将当前的修改线放到顶部 git push origin HEAD:refs/changes/** 提交修改，如果有冲突解决冲突，再git commit -–amend，再提交。
* 提交的时候没有git commit -–amend，而是git pull了，有冲突，解决流程：
* git reflog 查看本地git所有提交记录，找到需要gerrit的提交记录后git reset回到那一笔记录，然后正常提交。
* 本地代码冲突：git stash暂存本地代码，然后git pull拉取最新代码，然后git stash pop解决冲突。
* git push origin HEAD:refs/for/**
* git push origin HEAD:refs/for/**
* 输出当前的堆栈信息adb shell dumpsys activity activities > 1

























































