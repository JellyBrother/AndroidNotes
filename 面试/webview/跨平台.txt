Flutter框架优缺点
https://blog.csdn.net/terrychinaz/article/details/115027121
https://segmentfault.com/a/1190000017164263/
https://www.jianshu.com/p/6b75413dd756
https://cloud.tencent.com/developer/article/2024486
https://baijiahao.baidu.com/s?id=1710194842067466597&wfr=spider&for=pc

Hbrid
它的优势在于Android和IOS使用WebView加载相同的H5资源从而达到了一致性的体验，只需要维护一套web资源即可满足两端的需求，
并且由于是Web资源也很容易的进行更新和发布，这样的方案一直到现在都有很多的案例在使用，
也是因为这种方案的产生导致移动端开发人员必须学习部分的前端知识，也间接的导致移动端开发人员的市场压力，
但是它的弊端在于用户体验相对较差，流畅度以及响应速度都不如原生应用应用，
近几年大部分高质量的应用都抛弃了这种方式改用了其他方案或者直接回到原生开发

React Native
RN是一个很好的框架和开始，它使用JSX语法生成了虚拟DOM树，然后通过虚拟DOM树映射到了对应Native平台的原生控件，
所以它最终显示的是Native控件，但是由于它是间接的生成了Native控件性能是不如直接的原生开发，
并且UI的显示也比较依赖平台以及不同的系统版本也会有差异，之前其实也花了好多时间去学习了RN的开发，
但是RN在国内的市场现在不是很好，不是完全免费开源的
优点
热重载，它支持热重载可以极大的减少开发调试时间，增加开发效率
跨平台，一个代码库即可满足两种Native平台
Javascript应用比较广泛，大多数开发都比较容易上手，社区资源相较Futter规模更大更有经验 ---
一套代码可以减少部分的测试编写量
缺点
UI体验和性能都不如原生应用
不一致的UI，用户升级设备，以及在不同的平台设备上呈现不同的UI情况
应用安装包大，会影响用户的留存率

Flutter
优点
热重载，它支持热重载可以极大的减少开发调试时间，增加开发效率
跨平台，一个代码库即可满足种e平台
一套代码可以减少部分的测试编写量
更快的应用，使用Skia渲染引擎，可以提供60fps的体验
UI的一致性，UI是使用Skia进行渲染，不同系统和不同版本的系统都具有相同的UI体验
A、混合开发中，最接近原生开发的框架；
B、性能强大，流畅；
C、优秀的路由设计；
D、优秀的动画设计；
E、简单易学，Dart语言更具优势；
F、跨多种平台，减少开发成本；支持插件，可以访问原生系统的调用。
缺点
社区规模不如RN，但是就目前的增长速度而言这并不是一个很明显的劣势---
第三方库的支持较少，需要时间去积累---
应用安装包相对原生要大，会影响用户的留存率
UI细节离原生有一些差距
开发体验不太好，跨端调试工具不完善，调试时间会更长
需要克服的困难：
新语言Dart和新框架的学习成本；
目前使用Flutter的基本上是与原生混编，开发人员需要对各端原生开发技术有所掌握，涉及到各端底层调用或者优化，需要各端的原生开发技术支持。
成熟的第三方库比较少，需要开发人员更多的掌握开发细节技巧和优化技术；
全是Widget 控件，层层包裹。flutter的学习成本主要在于学习几十种Widget的特性
A、脱离不开原生，开发人员需要具备原生（Android、iOS）基础开发能力；
B、适配问题，开发工具版本升级后，修改量大；
C、原生集成第三方SDK后，兼容性适配是个令人头痛的问题；
D、代码可读性较差，对代码质量和管理要求较高；
E、Widget的类型难以选择，糟糕的UI控件API；
F、Flutter packages和Dart packages上第三方sdk繁杂，适配性差，不可乱用；
G、目前几乎没有第三方开发者平台开发Flutter能力的SDK，需要原生去集成；
H、打包后，apk/ipa要大很多。
三方库有限，需要自己造轮子；
Dart语言编写，增加了学习难度，并且学习了Dart之后无其他用处，相比JS和Java来说。
假装跨平台，躲不开原生代码
这是最大的问题，跨平台框架说白了就是UI跨平台，最后还是在原生平台运行，本来两个平台就有天壤之别，
一套代码就想吃掉iOS和Android在实际应用之中其实根本就不现实。Flutter具有与原生代码互相调用的能力固然非常科学，
但是问题反而显得更加明显——我一个前端工程师上哪里去知道什么是UIViewController，什么是Activity呢？我要是双端都熟悉，
学习Flutter就显得很没有必要。这是一个很矛盾的点，特别是在团队里，只有几个前端突然想学Flutter，是绝对做不来大项目的，
如果有原生开发者，那就没必要搞Flutter了。

桥接实现





