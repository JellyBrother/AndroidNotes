### HashMap的存储结构
* JDK1.8之前是数组加链表
* JDK1.8之后是数组加链表加红黑树

### HashMap的加载因子（扩容因子）为何默认是0.75?
在空间占用与查询时间之间取得了较好的权衡
大于这个值，空间节省了，但是链表可能过长就会影响性能
小于这个值，冲突减少了，但是扩容就会比较频繁，空间占用多并且扩容也会消耗性能

### HashMap的扩容
在JDK 1.8以前，链表是采用的头部插入的方式，从1.8改成了在链表尾部插入新元素的方式。 这么做是为了防止在扩容的时候，多线程时出现循环链表死循环。
当数组的长度大于64，且链表的长度大于8的时候，会把链表转为红黑树
数组的默认长度是16，当数据超过16 * 0.75=12的时候，就把数组的大小扩展为2 *16=32，即扩大一倍。


